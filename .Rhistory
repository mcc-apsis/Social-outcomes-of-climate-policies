axis.title.x = element_blank())
p2 <- literature %>%
distinct() %>%
group_by(publication) %>%
summarise(n=n()) %>%
filter(n>1) %>%
ggplot(.,aes(x=reorder(publication,n),y=n)) +
geom_bar(stat='identity') +
ylab("Number of articles") +
coord_flip() +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank())
p3 <- gather(literature,key,method,method_1:method_3) %>%
group_by(method) %>%
summarise(n=n()) %>%
filter(!is.na(method)) %>%
ggplot(.,aes(x=reorder(method,n),y=n)) +
geom_bar(stat='identity') +
ylab("Number of articles") +
coord_flip() +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank())
z <- ggarrange(p2,p3,ncol=1,nrow=2,align="v")
ggarrange(z,p1,ncol=2,widths=c(0.75,0.25))
docs <- docs_full %>%
distinct() %>%
filter(include=="Yes") %>%
mutate(year=as.numeric(year))
literature <- docs %>%
select(document_id,publication,year,method_1,method_2,method_3)
p1 <- literature %>%
distinct() %>%
group_by(year) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=year,y=n)) +
geom_bar(stat='identity') +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank(),
axis.title.x = element_blank())
p2 <- literature %>%
distinct() %>%
group_by(publication) %>%
summarise(n=n()) %>%
filter(n>1) %>%
ggplot(.,aes(x=reorder(publication,n),y=n)) +
geom_bar(stat='identity') +
ylab("Number of articles") +
coord_flip() +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank())
p3 <- gather(literature,key,method,method_1:method_3) %>%
group_by(method) %>%
summarise(n=n()) %>%
filter(!is.na(method)) %>%
ggplot(.,aes(x=reorder(method,n),y=n)) +
geom_bar(stat='identity') +
ylab("Number of articles") +
coord_flip() +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank())
z <- ggarrange(p2,p3,ncol=1,nrow=2,align="v")
ggarrange(z,p1,ncol=2,widths=c(0.75,0.25))
ggarrange(z,p1,ncol=2,widths=c(0.75,0.25),align="h")
ggarrange(z,p1,ncol=2,widths=c(0.75,0.25),align="v")
literature <- docs %>%
select(document_id,publication,year,method_1,method_2,method_3)
p1 <- literature %>%
distinct() %>%
group_by(year) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=year,y=n)) +
geom_bar(stat='identity') +
xlab("Year of publication") +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank())
p2 <- literature %>%
distinct() %>%
group_by(publication) %>%
summarise(n=n()) %>%
filter(n>1) %>%
ggplot(.,aes(x=reorder(publication,n),y=n)) +
geom_bar(stat='identity') +
ylab("Number of articles") +
coord_flip() +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank())
p3 <- gather(literature,key,method,method_1:method_3) %>%
group_by(method) %>%
summarise(n=n()) %>%
filter(!is.na(method)) %>%
ggplot(.,aes(x=reorder(method,n),y=n)) +
geom_bar(stat='identity') +
ylab("Number of cases") +
coord_flip() +
theme_bw() +
theme(legend.position="none",
axis.title.y = element_blank())
z <- ggarrange(p2,p3,ncol=1,nrow=2,align="v")
ggarrange(z,p1,ncol=2,widths=c(0.75,0.25),align="v")
rm(z)
rm(blarg)
View(docs)
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end)
View(policies)
library(ggmap)
library(maps)
library(mapdata)
world <- map_data("world")
View(world)
world <- left_join(world,policies,by=c("Region"=="country"))
world <- left_join(world,policies,by=c("Region"="country"))
world <- left_join(world,policies,by=c("region"="country"))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, fill=document_id),color="white") +
theme_void()
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, fill=document_id),color="white") +
theme_void() +
coord_fixed(1)
?geom_polygon
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, fill=document_id),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=document_id),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country"))
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end)
library(ggmap)
library(maps)
library(mapdata)
world <- map_data("world")
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country"))
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country")) %>%
mutate(fill=ifelse(is.na(document_id),0,1)))
world <- map_data("world")
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country")) %>%
mutate(fill=ifelse(is.na(document_id),0,1)))
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country")) %>%
mutate(fill=ifelse(is.na(document_id),0,1))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_void()
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country")) %>%
mutate(fill=ifelse(is.na(document_id),NA,1))
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end)
library(ggmap)
library(maps)
library(mapdata)
world <- map_data("world")
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country")) %>%
mutate(fill=ifelse(is.na(document_id),NA,1))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_bw() +
coord_fixed(1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
theme(legend.position="none")
blarg <- anti_join(world,policies %>% select(document_id,country,subnational_case_location),by=c("region"="country"))
View(blarg)
??anti_join
blarg <- anti_join(policies,world %>% select(document_id,country,subnational_case_location),by=c("country"="region"))
blarg <- anti_join(policies %>% select(document_id,country,subnational_case_location),world,by=c("country"="region"))
View(blarg)
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\MATLAB\\Handy code\\ISOcodes.xls",sheetName="3 letter codes",startRow = 3,colIndex=7:8,header=FALSE)
library(xlsx)
library(xlsx)
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\MATLAB\\Handy code\\ISOcodes.xls",sheetName="3 letter codes",startRow = 3,colIndex=7:8,header=FALSE)
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xls",sheetName="3 letter codes",startRow = 3,colIndex=7:8,header=FALSE)
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xls",sheetName="alternative_names")
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xlsx",sheetName="alternative_names")
isos <- isos %>% mutate(country=tolower(country))
View(isos)
View(isos)
policies <- left_join(policies,isos,by=c("country"="alternative.name"))
View(policies)
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end) %>%
mutate(country=tolower(country))
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xlsx",sheetName="alternative_names")
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xlsx",sheetName="alternative_names")
policies <- left_join(policies,isos,by=c("country"="alternative.name"))
View(policies)
world <- left_join(world,isos,by=c("region"="alternative.name"))
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end) %>%
mutate(country=tolower(country))
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xlsx",sheetName="alternative_names")
policies <- left_join(policies,isos,by=c("country"="alternative.name"))
world <- map_data("world")
world <- left_join(world,isos,by=c("region"="alternative.name"))
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location,alpha.3),by=c("alpha.3"="alpha.3")) %>%
mutate(fill=ifelse(is.na(document_id),NA,1))
blarg <- anti_join(policies %>% select(document_id,country,subnational_case_location),world,by=c("country"="region"))
View(blarg)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
theme(legend.position="none")
View(policies)
world <- left_join(world %>% mutate(region=tolower(region)),isos,by=c("region"="alternative.name"))
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end) %>%
mutate(country=tolower(country))
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xlsx",sheetName="alternative_names")
policies <- left_join(policies,isos,by=c("country"="alternative.name"))
world <- map_data("world")
world <- left_join(world %>% mutate(region=tolower(region)),isos,by=c("region"="alternative.name"))
world <- left_join(world,policies %>% select(document_id,country,subnational_case_location,alpha.3),by=c("alpha.3"="alpha.3")) %>%
mutate(fill=ifelse(is.na(document_id),NA,1))
blarg <- anti_join(policies %>% select(document_id,country,subnational_case_location),world,by=c("country"="region"))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=fill),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
theme(legend.position="none")
View(blarg)
View(policies)
View(blarg)
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xlsx",sheetName="alternative_names")
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end) %>%
mutate(country=tolower(country))
policies <- left_join(policies,isos,by=c("country"="alternative.name"))
world <- map_data("world")
world <- left_join(world %>% mutate(region=tolower(region)),isos,by=c("region"="alternative.name"))
world <- left_join(world,policies %>%
group_by(alpha.3) %>%
summarise(n=n()),by=c("alpha.3"="alpha.3"))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
theme(legend.position="none")
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
policies %>%
group_by(country) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=country,y=n)) +
geom_bar(stat='identity')
policies %>%
group_by(country) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=country,y=n)) +
geom_bar(stat='identity') +
coord_flip()
policies %>%
group_by(country) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n)) +
geom_bar(stat='identity') +
coord_flip()
policies %>%
group_by(country) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
policies %>%
group_by(country,scope_of_policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
policies %>%
group_by(country,scope_of_policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n,fill=scope_of_policy)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end) %>%
mutate(country=tolower(country)) %>%
mutate(scope_of_policy=as.factor(scope_of_policy))
policies <- left_join(policies,isos,by=c("country"="alternative.name"))
policies %>%
group_by(country,scope_of_policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n,fill=scope_of_policy)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
policies <- policies %>%
filter(is.na(scope_of_policy))
policies %>%
group_by(country,scope_of_policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n,fill=scope_of_policy)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
isos <- read.xlsx(file="C:\\Users\\lamw\\Documents\\SpiderOak Hive\\Work\\Code\\R\\.Place names and codes\\output\\ISOcodes.xlsx",sheetName="alternative_names")
policies <- docs %>%
select(document_id,country,subnational_case_location,policy_type_1,policy_type_2,policy_type_3,scope_of_policy,policy_location_if_subnational,policy_name,policy_date_start,policy_date_end) %>%
mutate(country=tolower(country)) %>%
mutate(scope_of_policy=as.factor(scope_of_policy))
policies <- left_join(policies,isos,by=c("country"="alternative.name"))
world <- map_data("world")
world <- left_join(world %>% mutate(region=tolower(region)),isos,by=c("region"="alternative.name"))
world <- left_join(world,policies %>%
group_by(alpha.3) %>%
summarise(n=n()),by=c("alpha.3"="alpha.3"))
## to check if none joined
#blarg <- anti_join(policies %>% select(document_id,country,subnational_case_location),world,by=c("country"="region"))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
policies <- policies %>%
filter(!is.na(scope_of_policy))
policies %>%
group_by(country,scope_of_policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n,fill=scope_of_policy)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
policies$scope_of_policy <- factor(policies$scope_of_policy,levels(policies$scope_of_policy)[c(3,4,1,2)])
policies %>%
group_by(country,scope_of_policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(country,n),y=n,fill=scope_of_policy)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1)
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
guides(fill = guide_legend(reverse = TRUE))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
scale_fill_continuous(trans = 'reverse') +
guides(fill = guide_legend(reverse = TRUE))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
scale_fill_continuous(trans = 'reverse',na.value="white") +
guides(fill = guide_legend(reverse = TRUE))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
scale_fill_continuous(trans = 'reverse',na.value='#bdbdbd') +
guides(fill = guide_legend(reverse = TRUE))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
scale_fill_continuous(trans = 'reverse',na.value='#969696') +
guides(fill = guide_legend(reverse = TRUE))
world <- map_data("world") %>%
filter(region!="Antarctica")
world <- left_join(world %>% mutate(region=tolower(region)),isos,by=c("region"="alternative.name"))
world <- left_join(world,policies %>%
group_by(alpha.3) %>%
summarise(n=n()),by=c("alpha.3"="alpha.3"))
## to check if none joined
#blarg <- anti_join(policies %>% select(document_id,country,subnational_case_location),world,by=c("country"="region"))
ggplot() +
geom_polygon(data = world, aes(x=long, y = lat, group=group, fill=n),color="white",na.rm=T) +
theme_void() +
coord_fixed(1) +
scale_fill_continuous(trans = 'reverse',na.value='#969696') +
guides(fill = guide_legend(reverse = TRUE))
blarg <- gather(policies,key,policy,policy_type_1:policy_type_3)
View(blarg)
blarg <- gather(policies,key,policy,policy_type_1:policy_type_3) %>%
filter(!is.na(policy))
blarg %>%
group_by(policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=policy,y=n)) +
geom_bar(stat='identity') +
coord_flip()
blarg %>%
group_by(policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(policy,n),y=n)) +
geom_bar(stat='identity') +
coord_flip()
blarg %>%
group_by(policy) %>%
summarise(n=n()) %>%
ggplot(.,aes(x=reorder(policy,n),y=n)) +
geom_bar(stat='identity') +
coord_flip() +
theme_bw() +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
z <- blarg %>%
group_by(country,policy) %>%
summarise(n=n())
View(z)
z %>%
ggplot(.,aes(country,policy)) +
geom_title(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey")
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey")
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
guides(fill=FALSE)
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.25)) +
guides(fill=FALSE)
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey") +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5)) +
guides(fill=FALSE)
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey") +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.25)) +
guides(fill=FALSE)
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey") +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1)) +
guides(fill=FALSE)
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey") +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1)) +
guides(fill=FALSE)
z %>%
ggplot(.,aes(country,policy)) +
geom_tile(aes(fill=n),colour="grey50") +
geom_text(aes(label=n)) +
scale_fill_distiller(palette = "YlGnBu",direction=1,na.value = "grey") +
theme_bw() +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1),
axis.title.y=element_blank(),
axis.title.x=element_blank()) +
guides(fill=FALSE)
